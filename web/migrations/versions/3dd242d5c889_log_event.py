"""log_event

Revision ID: 3dd242d5c889
Revises: 81c70d1cfb4b
Create Date: 2023-08-03 15:38:13.497834

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "3dd242d5c889"
down_revision = "81c70d1cfb4b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "log_events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "log_type",
            sa.Enum(
                "HEARTBEAT",
                "BACKUP_DOWNLOAD",
                "CLIENT_UPGRADE",
                "CLIENT_ERROR",
                "STATUS_GREEN",
                "STATUS_YELLOW",
                "STATUS_RED",
                "SPECIAL_STATUS",
                name="logtype",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("data", sa.String(length=128), server_default="", nullable=True),
        sa.Column("computer_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["computer_id"],
            ["computers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "computers",
        sa.Column(
            "logs_enabled", sa.Boolean(), server_default=sa.text("true"), nullable=True
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("computers", "logs_enabled")
    op.drop_table("log_events")

    log_type = postgresql.ENUM(
        "HEARTBEAT",
        "BACKUP_DOWNLOAD",
        "CLIENT_UPGRADE",
        "CLIENT_ERROR",
        "STATUS_GREEN",
        "STATUS_YELLOW",
        "STATUS_RED",
        "STATUS_SPECIAL",
        name="logtype",
    )
    log_type.drop(op.get_bind())
    # ### end Alembic commands ###

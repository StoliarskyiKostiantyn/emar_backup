"""user_permission_items

Revision ID: a230249243e2
Revises: e3095a0b717e
Create Date: 2023-10-06 16:22:33.350277

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "a230249243e2"
down_revision = "e3095a0b717e"
branch_labels = None
depends_on = None


def upgrade():
    user_role = postgresql.ENUM(
        "ADMIN",
        "USER",
        name="userrole",
    )
    user_role.create(op.get_bind())

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_to_group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("location_group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["location_group_id"],
            ["location_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "users_to_location",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["locations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.add_column("users", sa.Column("company_id", sa.Integer(), nullable=True))
    op.add_column(
        "users",
        sa.Column(
            "role",
            sa.Enum("ADMIN", "USER", name="userrole"),
            server_default="ADMIN",
            nullable=False,
        ),
    )
    op.create_foreign_key(
        "fk_user_company", "users", "companies", ["company_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_user_company", "users", type_="foreignkey")
    op.drop_column("users", "role")
    op.drop_column("users", "company_id")
    op.drop_table("users_to_location")
    op.drop_table("users_to_group")
    # ### end Alembic commands ###

    user_role = postgresql.ENUM(
        "ADMIN",
        "USER",
        name="userrole",
    )
    user_role.drop(op.get_bind())
